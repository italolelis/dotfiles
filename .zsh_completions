# Custom zsh completions
# This file contains custom completion functions

# Docker compose completions for 'dc' alias
_dc() {
    local -a subcmds
    subcmds=(
        'up:Start services'
        'down:Stop services'
        'start:Start existing containers'
        'stop:Stop running containers'
        'restart:Restart services'
        'logs:View output from containers'
        'exec:Execute a command in a running container'
        'run:Run a one-off command'
        'build:Build or rebuild services'
        'pull:Pull service images'
        'push:Push service images'
        'ps:List containers'
    )

    _describe -t commands 'docker compose commands' subcmds
}

# Kubernetes context completion for 'kctx' alias
_kctx() {
    local -a contexts
    contexts=($(kubectl config get-contexts -o name 2>/dev/null))
    _describe -t contexts 'kubernetes contexts' contexts
}

# Git branch completion for 'gco' and 'gb' aliases
_git_branch() {
    local -a branches
    local current_branch=$(git branch --show-current 2>/dev/null)

    if [ -n "$current_branch" ]; then
        # Put current branch first
        branches=($current_branch)
        # Add other branches
        branches+=($(git branch --format='%(refname:short)' 2>/dev/null | grep -v "^$current_branch$"))
    else
        branches=($(git branch --format='%(refname:short)' 2>/dev/null))
    fi

    _describe -t branches 'git branches' branches
}

# Register completions after a delay to ensure completion system is loaded
() {
    # Wait for completion system to be ready
    autoload -Uz compinit
    compinit

    # Register completions
    compdef _dc dc 2>/dev/null || true
    compdef _kctx kctx 2>/dev/null || true
    compdef _git_branch gco 2>/dev/null || true
    compdef _git_branch gb 2>/dev/null || true
}
